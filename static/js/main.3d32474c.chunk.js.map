{"version":3,"sources":["components/nav-list.js","components/title.js","components/national-details.js","components/internations-details.js","components/global-chart.js","components/national-chart.js","components/table_with_search.js","App.js","serviceWorker.js","index.js"],"names":["topListItems","ListItem","button","href","target","ListItemIcon","ListItemText","primary","bottomListItems","ListSubheader","inset","Title","props","Typography","component","variant","color","gutterBottom","children","NationDetails","state","covid","this","getData","date","Date","setDate","getDate","month","getMonth","day","getFullYear","x","String","pattern","test","replace","Fragment","Box","p","bgcolor","display","justifyContent","flexWrap","borderRadius","className","numberWithCommas","confirmed","deaths","recovered","getPreviousDate","fetch","response","json","data","dataset","result","Object","keys","setState","Component","InternationalDetails","res_data","GolbalChart","startDate","endDate","dates","currentDate","addDays","days","valueOf","push","call","api_data","key","final_format","attr_confirmed","attr_deaths","attr_recovered","create_chart_obj","fetchData","prepare_actual_data","actual_format","console","log","width","margin","top","right","bottom","left","dataKey","stroke","type","interval","angle","position","style","textAnchor","fill","verticalAlign","height","name","dot","React","NationalChart","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","CountriesTable","columns","json_data","c","final_data","attr_country","attr_recov","undefined","Countrycodes","country","prepare_data","sort","y","title","field","cellStyle","padding","icons","options","headerStyle","backgroundColor","paddingBlock","Copyright","align","Link","useStyles","makeStyles","theme","root","toolbar","paddingRight","toolbarIcon","alignItems","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Dashboard","classes","useState","open","setOpen","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","onClick","noWrap","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","md","lg","Paper","pt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d32474c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport LocalHospital from '@material-ui/icons/LocalHospital';\r\nimport Home from '@material-ui/icons/Home';\r\nimport BugReport from '@material-ui/icons/BugReport';\r\nimport Description from '@material-ui/icons/Description';\r\nimport Mood from '@material-ui/icons/Mood';\r\nimport GitHub from '@material-ui/icons/GitHub';\r\n\r\nexport const topListItems = (\r\n  <div>\r\n    <ListItem button>\r\n        <a href=\"https://www.worldometers.info/coronavirus/?\" target=\"_blank\">\r\n        <ListItemIcon>\r\n        <LocalHospital />\r\n      </ListItemIcon>\r\n      </a>\r\n      <ListItemText primary=\"WHO\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <Home />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"StayHome\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <a href=\"https://www.covid19india.org/\" target=\"_blank\">\r\n      <ListItemIcon>\r\n        <BugReport />\r\n      </ListItemIcon>\r\n      </a>\r\n      <ListItemText primary=\"covid19india\" />\r\n    </ListItem>\r\n    \r\n    \r\n  </div>\r\n);\r\n\r\nexport const bottomListItems = (\r\n  <div>\r\n    <ListSubheader inset></ListSubheader>\r\n    <ListItem button>\r\n      <a href=\"https://www.linkedin.com/in/raviteja-boddupalli\" target=\"_blank\">\r\n      <ListItemIcon>\r\n        <Mood />\r\n      </ListItemIcon>\r\n      </a>\r\n      <ListItemText primary=\"About Me\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <a href=\"https://documenter.getpostman.com/view/2568274/SzS8rjbe?version=latest#149a7702-2774-4328-815d-ab66afc0351c\" target=\"_blank\">\r\n      <ListItemIcon>\r\n        <Description />\r\n      </ListItemIcon>\r\n      </a>\r\n      <ListItemText primary=\"API reference\" />\r\n    </ListItem>\r\n    <ListItem button > \r\n        <a href=\"https://www.github.com/Raviezz\" target=\"_blank\">\r\n        <ListItemIcon>\r\n        <GitHub />\r\n        </ListItemIcon>\r\n        </a>\r\n        <ListItemText primary=\"Source Code\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, {Component} from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Title from './title';\r\nimport './details.css';\r\n\r\n\r\n\r\n\r\nexport default class NationDetails extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            covid :{},\r\n        };\r\n    }\r\n    \r\n    async componentDidMount(){\r\n       await this.getData();\r\n       // console.log(\"cons \",this.state.covid['result']);\r\n    }\r\n    getPreviousDate(){\r\n      var date = new Date();\r\n      date.setDate(date.getDate(),-1);\r\n      var month = date.getMonth()+1;\r\n      var day = date.getDate();\r\n      if(day<10) day = '0'+day;\r\n      if(month<10) month = '0'+month;\r\n      return date.getFullYear()+'-'+month+'-'+day;\r\n    }\r\n     numberWithCommas(x) {\r\n      x = String(x);\r\n      var pattern = /(-?\\d+)(\\d{3})/;\r\n      while (pattern.test(x))\r\n          x = x.replace(pattern, \"$1,$2\");\r\n      return x;\r\n  }\r\n    \r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n              <Title>INDIA</Title>\r\n              <Box p={1} bgcolor=\"#ffe0e6\" display=\"flex\"\r\n                justifyContent= \"space-evenly\"\r\n                flexWrap=\"nowrap\"\r\n                borderRadius=\"10px\"\r\n                p={1}\r\n                m={1}>\r\n                <Typography component=\"p\" variant=\"h6\" className=\"confirmed\">\r\n                {this.numberWithCommas(this.state.covid.confirmed)}  \r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"h6\"  className=\"confirmed\">\r\n                Confirmed\r\n                </Typography>\r\n             </Box>\r\n             <Box p={1} bgcolor=\"#f6f6f7\" display=\"flex\"\r\n                justifyContent= \"space-evenly\"\r\n                flexWrap=\"nowrap\"\r\n                borderRadius=\"10px\"\r\n                p={1}\r\n                m={1}>\r\n              <Typography component=\"p\" variant=\"h6\" className=\"deaths\">\r\n              {this.numberWithCommas(this.state.covid.deaths)} \r\n              </Typography>\r\n              <Typography component=\"p\" variant=\"h6\" className=\"deaths\">\r\n              Deaths\r\n              </Typography>\r\n              </Box>\r\n              <Box p={1} bgcolor=\"#e4f4e8\" display=\"flex\"\r\n                justifyContent= \"space-evenly\"\r\n                flexWrap=\"nowrap\"\r\n                borderRadius=\"10px\"\r\n                p={1}\r\n                m={1}>\r\n              <Typography component=\"p\" variant=\"h6\" className=\"recovered\">\r\n              {this.numberWithCommas(this.state.covid.recovered)} \r\n              </Typography>\r\n              <Typography component=\"p\" variant=\"h6\" className=\"recovered\">\r\n               Recovered\r\n              </Typography>\r\n            </Box>\r\n            <Box p={1} display=\"flex\"\r\n                justifyContent= \"space-evenly\"\r\n                flexWrap=\"nowrap\"\r\n                borderRadius=\"10px\"\r\n                p={1}\r\n                m={1}>\r\n                  <Typography variant=\"subtitle2\" color=\"primary\">Last updated:</Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"primary\">{this.getPreviousDate()}</Typography>\r\n                  </Box>\r\n            </React.Fragment>\r\n          );\r\n    }\r\n    async getData(){\r\n        const response = await fetch(\"https://covidapi.info/api/v1/country/IND/latest\");\r\n        const data = await response.json();\r\n        const dataset = data.result[Object.keys(data.result)[0]]\r\n        this.setState({covid:dataset});\r\n       \r\n    };\r\n  \r\n}","import React, {Component} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Title from './title';\r\nimport './details.css';\r\n\r\nexport default class InternationalDetails extends Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            covid :{},\r\n        };\r\n    }\r\n    getPreviousDate(){\r\n      var date = new Date();\r\n      date.setDate(date.getDate(),-1);\r\n      var month = date.getMonth()+1;\r\n      var day = date.getDate();\r\n      if(day<10) day = '0'+day;\r\n      if(month<10) month = '0'+month;\r\n      return date.getFullYear()+'-'+month+'-'+day;\r\n    }\r\n    async componentDidMount(){\r\n        await this.getData();\r\n       // console.log(\"cons \",this.state.covid['result']);\r\n    }\r\n    numberWithCommas(x) {\r\n      x = String(x);\r\n      var pattern = /(-?\\d+)(\\d{3})/;\r\n      while (pattern.test(x))\r\n          x = x.replace(pattern, \"$1,$2\");\r\n      return x;\r\n  }\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n              <Title>GLOBALLY</Title>\r\n              <Box p={1} bgcolor=\"#ffe0e6\" display=\"flex\"\r\n                justifyContent= \"space-evenly\"\r\n                flexWrap=\"nowrap\"\r\n                borderRadius=\"10px\"\r\n                p={1}\r\n                m={1}>\r\n                <Typography component=\"p\" variant=\"h6\" className=\"confirmed\">\r\n                {this.numberWithCommas(this.state.covid.confirmed)}  \r\n                </Typography>\r\n                <Typography component=\"p\" variant=\"h6\"  className=\"confirmed\">\r\n                Confirmed\r\n                </Typography>\r\n             </Box>\r\n             <Box p={1} bgcolor=\"#f6f6f7\" display=\"flex\"\r\n                justifyContent= \"space-evenly\"\r\n                flexWrap=\"nowrap\"\r\n                borderRadius=\"10px\"\r\n                p={1}\r\n                m={1}>\r\n              <Typography component=\"p\" variant=\"h6\" className=\"deaths\">\r\n              {this.numberWithCommas(this.state.covid.deaths)} \r\n              </Typography>\r\n              <Typography component=\"p\" variant=\"h6\" className=\"deaths\">\r\n              Deaths\r\n              </Typography>\r\n              </Box>\r\n              <Box p={1} bgcolor=\"#e4f4e8\" display=\"flex\"\r\n                justifyContent= \"space-evenly\"\r\n                flexWrap=\"nowrap\"\r\n                borderRadius=\"10px\"\r\n                p={1}\r\n                m={1}>\r\n              <Typography component=\"p\" variant=\"h6\" className=\"recovered\">\r\n              {this.numberWithCommas(this.state.covid.recovered)} \r\n              </Typography>\r\n              <Typography component=\"p\" variant=\"h6\" className=\"recovered\">\r\n               Recovered\r\n              </Typography>\r\n            </Box>\r\n            <Box p={1} display=\"flex\"\r\n                justifyContent= \"space-evenly\"\r\n                flexWrap=\"nowrap\"\r\n                borderRadius=\"10px\"\r\n                p={1}\r\n                m={1}>\r\n                  <Typography variant=\"subtitle2\" color=\"primary\">Last updated:</Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"primary\">{this.getPreviousDate()}</Typography>\r\n                  </Box>\r\n            </React.Fragment>\r\n          );\r\n    }\r\n    async getData(){\r\n        const response = await fetch(\"https://covidapi.info/api/v1/global\")\r\n        const res_data = await response.json();\r\n        const dataset = res_data.result;\r\n        this.setState({covid:dataset});\r\n           // console.log(\"Data fetched\",dataset);\r\n       \r\n    };\r\n  \r\n}","import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, Legend, Tooltip } from 'recharts';\r\nimport Title from './title';\r\nimport { Typography } from '@material-ui/core';\r\n \r\nexport default class GolbalChart extends React.Component{\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n        data : [],\r\n    }\r\n}\r\nasync getDates(startDate, endDate) {\r\n    var dates = [],\r\n        currentDate = startDate,\r\n        addDays = function(days) {\r\n          var date = new Date(this.valueOf());\r\n          date.setDate(date.getDate() + days);\r\n          return date;\r\n        };\r\n    while (currentDate <= endDate) {\r\n        var month = currentDate.getMonth()+1, date =currentDate.getDate();\r\n        if(month<10){\r\n            month = '0'+month;\r\n        }\r\n        if(date <10){\r\n            date = '0'+date;\r\n        }\r\n      dates.push(currentDate.getFullYear()+\"-\"+month+\"-\"+date);\r\n      currentDate = addDays.call(currentDate,1);\r\n    }\r\n    return dates;\r\n  };\r\n  \r\n  create_chart_obj(date,confirmed,deaths,recovered){\r\n      return {date,confirmed,deaths,recovered};\r\n  }\r\n\r\n  async fetchData(){\r\n   // const dates = await this.getDates(new Date(\"2020-03-02\"), new Date());  \r\n   const response = await fetch(\"https://covidapi.info/api/v1/global/count\");\r\n    const res_data = await response.json();   \r\n    return res_data.result;\r\n};\r\nasync prepare_actual_data(api_data){\r\n  var final_format = [];\r\n    for(var key in api_data){\r\n      var attr_confirmed = api_data[key].confirmed;\r\n      var attr_deaths = api_data[key].deaths;\r\n      var attr_recovered = api_data[key].recovered;\r\n     final_format.push(this.create_chart_obj(key,attr_confirmed,attr_deaths,attr_recovered));\r\n    }\r\n   return final_format;\r\n}\r\n async componentDidMount() {\r\n    var api_data = await this.fetchData();\r\n    //console.log(api_data)\r\n    var actual_format = await this.prepare_actual_data(api_data);\r\n    console.log(actual_format)\r\n    this.setState(\r\n        {\r\n            data: actual_format\r\n        }\r\n    );   \r\n}\r\n\r\n\r\nrender(){\r\nreturn (\r\n    <React.Fragment>\r\n      <Title>GLOBAL COVID-19 chart from Jan 22</Title>\r\n      <ResponsiveContainer width=\"100%\">\r\n        <LineChart\r\n          data={this.state.data}\r\n          margin={{\r\n            top: 16,\r\n            right: 16,\r\n            bottom: 0,\r\n            left: 24,\r\n          }}\r\n        >\r\n          <XAxis dataKey=\"date\" stroke='rgba(0, 0, 0, 0.54)'>\r\n         \r\n          </XAxis>\r\n          <YAxis  type=\"number\" interval={0} stroke='rgba(0, 0, 0, 0.54)'>\r\n            <Label\r\n              angle={270}\r\n              position=\"left\"\r\n              style={{ textAnchor: 'middle', fill: 'rgba(0, 0, 0, 0.87)' }}\r\n            >\r\n              people\r\n            </Label>\r\n          </YAxis>\r\n          <Tooltip />\r\n          <Legend verticalAlign=\"top\" height={36}/>\r\n          <Line name=\"confirmed\" type=\"monotone\" dataKey=\"confirmed\" stroke=\"#1976d2\" dot={false} />\r\n          <Line name=\"deaths\" type=\"monotone\" dataKey=\"deaths\" stroke=\"#dc004e\" dot={false} />\r\n           <Line name=\"recovered\" type=\"monotone\" dataKey=\"recovered\" stroke=\"#388e3c\" dot={false} /> \r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n      <Typography variant=\"subtitle2\" color=\"primary\">\r\n          Data gets updated everyday once.\r\n      </Typography>\r\n    </React.Fragment>\r\n  );\r\n} \r\n}","import React from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer, Legend, Tooltip } from 'recharts';\r\nimport Title from './title';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n \r\nexport default class NationalChart extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            data : [],\r\n        }\r\n    }\r\n    async getDates(startDate, endDate) {\r\n        var dates = [],\r\n            currentDate = startDate,\r\n            addDays = function(days) {\r\n              var date = new Date(this.valueOf());\r\n              date.setDate(date.getDate() + days);\r\n              return date;\r\n            };\r\n        while (currentDate <= endDate) {\r\n            var month = currentDate.getMonth()+1, date =currentDate.getDate();\r\n            if(month<10){\r\n                month = '0'+month;\r\n            }\r\n            if(date <10){\r\n                date = '0'+date;\r\n            }\r\n          dates.push(currentDate.getFullYear()+\"-\"+month+\"-\"+date);\r\n          currentDate = addDays.call(currentDate,1);\r\n        }\r\n        return dates;\r\n      };\r\n      \r\n      create_chart_obj(date,confirmed,deaths,recovered){\r\n          return {date,confirmed,deaths,recovered};\r\n      }\r\n\r\n      async fetchData(){\r\n       // const dates = await this.getDates(new Date(\"2020-03-02\"), new Date());  \r\n       const response = await fetch(\"https://covidapi.info/api/v1/country/IND\");\r\n        const res_data = await response.json();   \r\n        return res_data.result;\r\n    };\r\n    async prepare_actual_data(api_data){\r\n      var final_format = [];\r\n        for(var key in api_data){\r\n          var attr_confirmed = api_data[key].confirmed;\r\n          var attr_deaths = api_data[key].deaths;\r\n          var attr_recovered = api_data[key].recovered;\r\n         final_format.push(this.create_chart_obj(key,attr_confirmed,attr_deaths,attr_recovered));\r\n        }\r\n       return final_format;\r\n    }\r\n     async componentDidMount() {\r\n        var api_data = await this.fetchData();\r\n        //console.log(api_data)\r\n        var actual_format = await this.prepare_actual_data(api_data);\r\n        console.log(actual_format)\r\n        this.setState(\r\n            {\r\n                data: actual_format\r\n            }\r\n        );   \r\n    }\r\n  \r\n\r\n  render(){\r\n    return (\r\n        <React.Fragment>\r\n          <Title>INDIA COVID-19 chart from Jan 22</Title>\r\n          <ResponsiveContainer width=\"100%\">\r\n            <LineChart\r\n              data={this.state.data}\r\n              margin={{\r\n                top: 16,\r\n                right: 16,\r\n                bottom: 0,\r\n                left: 24,\r\n              }}\r\n            >\r\n              <XAxis dataKey=\"date\" stroke='rgba(0, 0, 0, 0.54)'>\r\n             \r\n              </XAxis>\r\n              <YAxis  type=\"number\" interval={0} stroke='rgba(0, 0, 0, 0.54)'>\r\n                <Label\r\n                  angle={270}\r\n                  position=\"left\"\r\n                  style={{ textAnchor: 'middle', fill: 'rgba(0, 0, 0, 0.87)' }}\r\n                >\r\n                  people\r\n                </Label>\r\n              </YAxis>\r\n              <Tooltip />\r\n              <Legend verticalAlign=\"top\" height={36}/>\r\n              <Line name=\"confirmed\" type=\"monotone\" dataKey=\"confirmed\" stroke=\"#1976d2\" dot={false} />\r\n              <Line name=\"deaths\" type=\"monotone\" dataKey=\"deaths\" stroke=\"#dc004e\" dot={false} />\r\n               <Line name=\"recovered\" type=\"monotone\" dataKey=\"recovered\" stroke=\"#388e3c\" dot={false} /> \r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n          <Typography variant=\"subtitle2\" color=\"primary\">\r\n            Data gets updated everyday once.\r\n        </Typography>\r\n        </React.Fragment>\r\n      );\r\n  } \r\n}","import React,{ forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n import Countrycodes from '../resources/country_codes_3.json';\r\n import './table.css';\r\n\r\n const tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n\r\n\r\nexport default class CountriesTable extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            columns:[],\r\n            data:[]\r\n        }\r\n    }\r\n    async fetchData() {\r\n        const result = await fetch(\"https://covidapi.info/api/v1/global/latest\");\r\n        const json_data = await result.json();\r\n        return json_data.result;\r\n    }\r\n   async prepare_data(json_data){\r\n       var final_data = [];\r\n      var attr_country = '';\r\n        var attr_confirmed = 0,attr_deaths=0,attr_recov = 0;;\r\n         for(var c in json_data){\r\n            attr_country = Countrycodes[Object.keys(json_data[c])[0]] === undefined? Object.keys(json_data[c])[0]:Countrycodes[Object.keys(json_data[c])[0]];\r\n            attr_confirmed = json_data[c][Object.keys(json_data[c])[0]].confirmed;\r\n            attr_deaths =  json_data[c][Object.keys(json_data[c])[0]].deaths;\r\n            attr_recov =  json_data[c][Object.keys(json_data[c])[0]].recovered;\r\n           // console.log(attr_country,attr_confirmed,attr_deaths,attr_recov);\r\n            final_data.push(this.create_chart_obj(attr_country,attr_confirmed,attr_deaths,attr_recov));\r\n        } \r\n        return final_data;\r\n   }\r\n   create_chart_obj(country,confirmed,deaths,recovered){\r\n    return {country,confirmed,deaths,recovered};\r\n}\r\n   async componentDidMount() {\r\n      const json_data = await this.fetchData();\r\n      const final_data = await this.prepare_data(json_data);\r\n      final_data.sort(function(x,y){\r\n          return y.confirmed - x.confirmed;\r\n      });\r\n      //console.log(final_data);\r\n        this.fetchData();\r\n        this.setState({\r\n            columns:[\r\n                { title: 'Country', field: 'country' , cellStyle:{ padding: '8px'}},\r\n                { title: 'Confirmed', field: 'confirmed', type: 'numeric' , cellStyle:{ padding: '8px'}},\r\n                { title: 'Deaths', field: 'deaths', type: 'numeric' , cellStyle:{ padding: '8px'}},\r\n                { title: 'Recovered', field: 'recovered', type: 'numeric', cellStyle:{ padding: '8px'} },\r\n              ]\r\n        });\r\n        this.setState({\r\n            data: final_data\r\n        });\r\n    }\r\n  \r\nrender(){\r\n    return (\r\n        <MaterialTable\r\n          title=\"WWC\"\r\n          columns={this.state.columns}\r\n          data={this.state.data}\r\n          icons={tableIcons}\r\n        options=\r\n            {{\r\n                headerStyle:{\r\n                    backgroundColor:'#3f51b5', \r\n                    paddingBlock: '6px',\r\n                    color: '#ffffff',\r\n                   \r\n                 }, \r\n                 \r\n            }}          \r\n        />\r\n      );\r\n}\r\n  \r\n}\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { topListItems, bottomListItems } from './components/nav-list';\r\nimport NationDetails from './components/national-details';\r\nimport InternationalDetails from './components/internations-details';\r\nimport GolbalChart from './components/global-chart';\r\nimport NationalChart from './components/national-chart';\r\nimport CountriesTable from './components/table_with_search';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        raviteja\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 320,\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            COVID IS COMING\r\n          </Typography>\r\n         {/*  <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton> */}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>{topListItems}</List>\r\n        <Divider />\r\n        <List>{bottomListItems}</List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={6}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <GolbalChart />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={6} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <InternationalDetails />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <NationalChart />\r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={6} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <NationDetails />\r\n              </Paper>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              {/* <Paper className={classes.paper}>\r\n                \r\n              </Paper> */}\r\n              <CountriesTable />\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  \r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}